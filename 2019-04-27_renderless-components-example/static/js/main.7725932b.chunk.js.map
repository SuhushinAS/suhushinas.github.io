{"version":3,"sources":["app/history.js","api/index.js","modules/example/api/index.js","modules/example/ducks/index.js","app/reducer.js","modules/common/containers/KeyHandler/index.jsx","modules/common/containers/Layout/index.jsx","modules/example-key/components/Key/index.jsx","modules/example-key/components/KeyItem/index.jsx","modules/example-key/containers/ExampleKey/index.jsx","modules/example-map/components/GeoJSONItem/index.jsx","modules/example-map/components/TileLayerItem/index.jsx","modules/map/context/index.js","modules/map/hoc/withMap/index.jsx","modules/map/containers/GeoJSON/index.jsx","modules/map/containers/Map/index.jsx","modules/map/containers/TileLayer/index.jsx","modules/map/containers/View/index.jsx","modules/example-map/containers/ExampleMap/index.jsx","app/index.jsx","app/store.js","app/api.js","serviceWorker.js","index.js"],"names":["createHashHistory","optionsDefault","data","headers","isCors","ExampleApi","filter","arguments","length","undefined","limit","offset","this","request","Api","host","Object","classCallCheck","ms","_len","rest","Array","_key","Promise","resolve","setTimeout","apply","url","options","requestUrl","fetch","getOptions","response","json","_ref2","method","mode","objectWithoutProperties","objectSpread","body","JSON","stringify","credentials","Content-Type","X-HTTP-Method-Override","actionTypes","listGet","loadStart","loadStop","createReducer","initialState","reducerList","state","_ref","type","payload","reducer","isLoading","more","_createReducer","defineProperty","list","reduce","prev","item","id","reducers","example","combineReducers","KeyHandler","handlerAdd","eventName","document","addEventListener","_this","handler","handlerRemove","removeEventListener","e","props","keyList","keyCode","keys","forEach","React","Component","Layout","react_default","a","createElement","className","side","main","defaultProps","Key","_this$props","classList","isActive","push","join","KeyItem","handleChange","onChange","value","htmlFor","name","defaultChecked","ExampleKey","keyups","getKey","key","handleKey","setState","clearKeyups","hendleKeyChange","renderKey","components_Key","renderKeyItem","components_KeyItem","keydown","containers_Layout","renderMain","renderSide","map","containers_KeyHandler","getKeyList","GeoJSONItem","TileLayerItem","checked","MapContext","createContext","withMap","_React$Component","ComponentWithLeaflet","_getPrototypeOf2","args","possibleConstructorReturn","getPrototypeOf","call","concat","renderComponent","context","assign","inherits","createClass","Consumer","layerAdd","layerDelete","geoJSON","leaflet","layer","L","GeoJSON","geometryToLayer","addLayer","removeLayer","PureComponent","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Map","isLoad","handleLoad","refMap","window","ref","Provider","children","remove","params","TileLayer","View","handleViewChange","onViewChange","bounds","getBoundsClean","getBounds","rectangle","toGeoJSON","fly","on","_this$props2","view","isValid","fitBounds","fitWorld","padding","_this$props3","invalidateSize","equals","off","nextBounds","getBoundsNext","geoJSONIdList","geoJSONData","tileLayerIdList","tileLayerData","ExampleMap","showData","tileLayerId","filterGeoJSON","getGeoJSON","handleGeoJSONChange","handleTileLayerChange","renderGeoJSON","containers_GeoJSON","renderGeoJSONItem","components_GeoJSONItem","renderTileLayer","components_TileLayerItem","geoJSONList","containers_Map","containers_TileLayer","containers_View","Fragment","cols","disabled","rows","store","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","createStore","configureStore","routeData","example-key","component","path","example-map","routeList","App","renderLink","routeId","Link","to","renderRoute","Route","react_redux_es","Router","history","Switch","Redirect","Boolean","location","hostname","match","ReactDOM","render","app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7725932b.chunk.js","sourcesContent":["// @flow\n\nimport {createHashHistory} from 'history';\n\nexport default createHashHistory();\n","const optionsDefault = {\n  data: null,\n  headers: {},\n  isCors: false,\n};\n\nexport default class Api {\n  /**\n   * Конструктор.\n   * @param host Хост.\n   */\n  constructor(host = '') {\n    this.host = host;\n  }\n\n  /**\n   * Получить Опции запроса.\n   * @param {boolean} isCors Кроссдоменный запрос.\n   * @param data Данные\n   * @param headers Заголовки\n   * @param {string} method Метод.\n   * @param {*} mode Режим.\n   * @param {*} options Опции запроса.\n   * @return {*} Опции запроса.\n   */\n  static getOptions(isCors, {data, headers, method, mode, ...options}) {\n    return {\n      body: isCors ? JSON.stringify(data) : null,\n      credentials: 'include',\n      headers: {\n        ...headers,\n        'Content-Type': 'application/json',\n        'X-HTTP-Method-Override': method,\n      },\n      method: isCors ? 'POST' : 'GET',\n      ...options,\n      mode: isCors ? 'cors' : mode,\n    };\n  }\n\n  /**\n   * Приостановить выполнение.\n   * @param {*} ms Задержка.\n   * @return {*} Приостановить выполнение.\n   */\n  sleeper(ms) {\n    return function (...rest) {\n      return new Promise((resolve) => setTimeout(() => resolve(...rest), ms));\n    };\n  }\n\n  /**\n   * Отправить запрос.\n   * @param {string} url Адрес.\n   * @param {string} method Метод.\n   * @param {boolean} isCors Кроссдоменный запрос.\n   * @param {*} options Опции запроса.\n   * @returns {*} Данными сервера.\n   */\n  async request(url, method = 'GET', {isCors, ...options} = optionsDefault) {\n    const requestUrl = isCors ? this.host + url : url;\n    const response = await fetch(requestUrl, Api.getOptions(isCors, options));\n    return await response.json();\n  }\n}\n","import Api from 'api/index.js';\n\nexport default class ExampleApi extends Api {\n  listGet(filter = null, limit = 0, offset = 0) {\n    return this.request('/api/v1/example', 'GET', {\n      data: {\n        filter,\n        limit,\n        offset,\n      },\n      isCors: false,\n    });\n  }\n}\n","import {createReducer} from 'app/reducer.js';\n\nconst actionTypes = {\n  listGet: 'EXAMPLE__LIST-GET',\n  loadStart: 'EXAMPLE__LOAD_START',\n  loadStop: 'EXAMPLE__LOAD_STOP',\n};\n\nconst initialState = {\n  data: {},\n  isLoading: false,\n  more: true,\n};\n\n/**\n * Получить список.\n * @return {*} Данные для редьюсера.\n */\nexport function exampleActionListGet() {\n  return (dispatch, getState, api) => {\n    dispatch({type: actionTypes.loadStart});\n\n    return api.example.listGet().then((response) => {\n      if (0 === response.errors.length) {\n        dispatch({\n          payload: response.data,\n          type: actionTypes.listGet,\n        });\n\n        return response;\n      }\n\n      throw new Error(response);\n    }).catch((error) => {\n      dispatch({type: actionTypes.loadStop});\n\n      console.error(error);\n    });\n  };\n}\n\nexport default createReducer(initialState, {\n  [actionTypes.listGet](state, {list, more}) {\n    return {\n      ...state,\n      data: list.reduce((prev, item) => ({\n        ...prev,\n        [item.id]: item,\n      }), {}),\n      isLoading: false,\n      more,\n    };\n  },\n  [actionTypes.loadStart](state) {\n    return {\n      ...state,\n      isLoading: true,\n    };\n  },\n  [actionTypes.loadStop](state) {\n    return {\n      ...state,\n      isLoading: false,\n    };\n  },\n});\n","import example from 'modules/example/ducks/index.js';\nimport {combineReducers} from 'redux';\n\nconst reducers = {\n  example,\n};\n\nexport default combineReducers(reducers);\n\n/**\n * Создать редьюсер.\n * @param {*} initialState Начальное состояние.\n * @param {*} reducerList Набор редьюсеров.\n * @return {*} Редьюсер.\n */\nexport function createReducer(initialState, reducerList) {\n  return (state = initialState, {type, payload}) => {\n    const reducer = reducerList[type];\n\n    if ('function' === typeof reducer) {\n      return reducer(state, payload);\n    }\n\n    return state;\n  };\n}\n","import React from 'react';\n\nclass KeyHandler extends React.Component {\n  /**\n   * Добавление слушателей нажатий клавиш.\n   * @param {string} eventName Название события.\n   * @return {undefined}\n   */\n  handlerAdd = (eventName) => {\n    document.addEventListener(eventName, this.handler);\n  };\n\n  /**\n   * Удаление слушателей нажатий клавиш.\n   * @param {string} eventName Название события.\n   * @return {undefined}\n   */\n  handlerRemove = (eventName) => {\n    document.removeEventListener(eventName, this.handler);\n  };\n\n  /**\n   * Обработчик нажатия клавиш.\n   * @param {*} e Событие.\n   * @return {function(*=)} Обработчик нажатия клавиш.\n   */\n  handler = (e) => {\n    if (this.props.keyList[e.type]) {\n      if (this.props.keyList[e.type][e.keyCode]) {\n        this.props.keyList[e.type][e.keyCode](e);\n      }\n    }\n  };\n\n  /**\n   * Компонент примонтировался.\n   * В данный момент у нас есть возможность использовать refs,\n   * а следовательно это то самое место, где мы хотели бы указать установку фокуса.\n   * Так же, таймауты, ajax-запросы и взаимодействие с другими библиотеками стоит обрабатывать здесь.\n   * @return {undefined}\n   */\n  componentDidMount() {\n    Object.keys(this.props.keyList).forEach(this.handlerAdd);\n  }\n\n  /**\n   * Вызывается сразу перед тем, как компонент будет удален из DOM.\n   * @return {undefined}\n   */\n  componentWillUnmount() {\n    Object.keys(this.props.keyList).forEach(this.handlerRemove);\n  }\n\n  /**\n   * Должен ли компонент обновиться?\n   * На самом деле, обычно реакт сам отлично разбирается.\n   * Но иногда ручное управление позволяет существенно ускорить работу в \"узких местах\".\n   * @param {*} props Новые свойства.\n   // * @param {*} nextState Новое состояние.\n   * @return {boolean} Должен ли компонент обновиться?\n   */\n  shouldComponentUpdate(props) {\n    Object.keys(this.props.keyList).forEach(this.handlerRemove);\n    Object.keys(props.keyList).forEach(this.handlerAdd);\n    return false;\n  }\n\n  /**\n   * Отображение компонента\n   * @return {*} Представление компонента.\n   */\n  render() {\n    return null;\n  }\n}\n\nexport default KeyHandler;\n","import React from 'react';\nimport './style.css';\n\nclass Layout extends React.Component {\n  /**\n   * Значения свойств по-умолчанию.\n   * https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n   */\n  static defaultProps = {\n    main: () => <div>Main</div>,\n    side: () => <div>Side</div>,\n  };\n\n  /**\n   * Отображение компонента\n   * @return {*} Представление компонента.\n   */\n  render() {\n    return (\n      <div className=\"layout\">\n        <div className=\"layout__side\">{this.props.side}</div>\n        <div className=\"layout__main\">{this.props.main}</div>\n      </div>\n    );\n\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport './style.css';\n\nclass Key extends React.Component {\n  /**\n   * Значения свойств по-умолчанию.\n   * https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n   */\n  static defaultProps = {\n    isActive: false,\n  };\n\n  /**\n   * Вывести компонент.\n   * @return {*} Представление.\n   */\n  render() {\n    const {id, isActive} = this.props;\n    const classList = ['key'];\n\n    if (isActive) {\n      classList.push('key_active');\n    }\n\n    // console.log(classList.join(' '));\n\n    return (\n      <div className={classList.join(' ')}>\n        {id}\n      </div>\n    );\n  }\n}\n\nexport default Key;\n","import React from 'react';\nimport './style.css';\n\nclass KeyItem extends React.Component {\n  /**\n   * Значения свойств по-умолчанию.\n   * https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n   */\n  static defaultProps = {\n    onChange: () => {\n    },\n    value: {},\n  };\n\n  /**\n   * Вывести компонент.\n   * @return {*} Представление.\n   */\n  render() {\n    const {id, value} = this.props;\n    return (\n      <label className=\"key-item\" htmlFor={id}>\n        <input id={id} name=\"tile\" onChange={this.handleChange} defaultChecked={value[id]} type=\"checkbox\" />\n        {id}\n      </label>\n    );\n  }\n\n  handleChange = () => {\n    this.props.onChange(this.props.id);\n  };\n}\n\nexport default KeyItem;\n","import KeyHandler from 'modules/common/containers/KeyHandler/index.jsx';\nimport Layout from 'modules/common/containers/Layout/index.jsx';\nimport Key from \"modules/example-key/components/Key/index.jsx\";\nimport KeyItem from 'modules/example-key/components/KeyItem/index.jsx';\nimport keys from 'modules/example-key/data/keys.json';\nimport React from 'react';\n\nconst keyList = Object.keys(keys);\n\nclass ExampleKey extends React.Component {\n  /**\n   * Значения свойств по-умолчанию.\n   * https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n   */\n  static defaultProps = {};\n\n  state = {\n    keys: {},\n    keyups: {},\n  };\n\n  getKeyList() {\n    return {\n      keydown: Object.keys(this.state.keys).reduce(this.getKey, {}),\n    };\n  }\n\n  getKey = (prev, key) => {\n    if (this.state.keys[key]) {\n      return {\n        ...prev,\n        [key]: this.handleKey,\n      };\n    }\n\n    return prev;\n  };\n\n  handleKey = (e) => {\n    this.setState((state) => ({\n      ...state,\n      keyups: {\n        ...state.keyups,\n        [e.keyCode]: true,\n      },\n    }));\n    setTimeout(this.clearKeyups);\n  };\n\n  hendleKeyChange = (key) => {\n    const keyCode = keys[key];\n    this.setState((state) => ({\n      ...state,\n      keys: {\n        ...state.keys,\n        [keyCode]: !state.keys[keyCode],\n      },\n    }));\n  };\n\n  /**\n   * Вывести компонент.\n   * @return {*} Представление.\n   */\n  render() {\n    return (\n      <Layout main={this.renderMain()} side={this.renderSide()} />\n    );\n  }\n\n  renderKey = (key) => <Key id={key} isActive={this.state.keyups[keys[key]]} key={key} />;\n\n  renderKeyItem = (key) => <KeyItem id={key} key={key} onChange={this.hendleKeyChange} value={this.state.keys} />;\n\n  renderMain() {\n    return (\n      <div>\n        {keyList.map(this.renderKey)}\n        <KeyHandler keyList={this.getKeyList()} />\n      </div>\n    );\n  }\n\n  renderSide() {\n    return (\n      <fieldset>\n        <legend>Keys</legend>\n        {keyList.map(this.renderKeyItem)}\n      </fieldset>\n    );\n  }\n\n  clearKeyups = () => {\n    this.setState({keyups: {}})\n  };\n}\n\nexport default ExampleKey;\n","import React from 'react';\nimport './style.css';\n\nclass GeoJSONItem extends React.Component {\n  /**\n   * Значения свойств по-умолчанию.\n   * https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n   */\n  static defaultProps = {\n    onChange: () => {\n    },\n    value: {},\n  };\n\n  /**\n   * Вывести компонент.\n   * @return {*} Представление.\n   */\n  render() {\n    const {id, value} = this.props;\n    return (\n      <label className=\"geo-json\" htmlFor={id}>\n        <input id={id} name=\"tile\" onChange={this.handleChange} defaultChecked={value[id]} type=\"checkbox\" />\n        {id}\n      </label>\n    );\n  }\n\n  handleChange = () => {\n    this.props.onChange(this.props.id);\n  };\n}\n\nexport default GeoJSONItem;\n","import React from 'react';\nimport './style.css';\n\nclass TileLayerItem extends React.Component {\n  /**\n   * Значения свойств по-умолчанию.\n   * https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n   */\n  static defaultProps = {\n    onChange: () => {\n    },\n  };\n\n  /**\n   * Вывести компонент.\n   * @return {*} Представление.\n   */\n  render() {\n    const {id, value} = this.props;\n    return (\n      <label className=\"tile-radio\" htmlFor={id}>\n        <input id={id} name=\"tile\" onChange={this.handleChange} checked={value === id} type=\"radio\" />\n        {id}\n      </label>\n    );\n  }\n\n  handleChange = () => {\n    this.props.onChange(this.props.id);\n  };\n}\n\nexport default TileLayerItem;\n","// @flow\n\nimport React from 'react';\n\nexport const MapContext = React.createContext(undefined);\n","import {MapContext} from 'modules/map/context/index.js';\nimport React from 'react';\n\n/**\n * Передать map в компонент.\n * @param {*} Component Компонент.\n * @return {*} Компонент.\n */\nexport default function withMap(Component) {\n  return class ComponentWithLeaflet extends React.Component {\n    /**\n     * Вывести детей.\n     * @param {number} context Контекст.\n     * @return {*} Представление.\n     */\n    renderComponent = (context) => <Component {...this.props} {...context} />;\n\n    /**\n     * Отображение компонента\n     * @return {*} Представление компонента.\n     */\n    render() {\n      return <MapContext.Consumer>{this.renderComponent}</MapContext.Consumer>;\n    }\n  };\n}\n","import L from 'leaflet';\nimport withMap from 'modules/map/hoc/withMap/index.jsx';\nimport React from 'react';\n\nclass GeoJSON extends React.PureComponent {\n  /**\n   * Компонент примонтировался.\n   * В данный момент у нас есть возможность использовать refs,\n   * а следовательно это то самое место, где мы хотели бы указать установку фокуса.\n   * Так же, таймауты, ajax-запросы и взаимодействие с другими библиотеками стоит обрабатывать здесь.\n   * @return {undefined}\n   */\n  componentDidMount() {\n    this.layerAdd(this.props);\n  }\n\n  /**\n   * Вызывается сразу после render.\n   * Не вызывается в момент первого render'а компонента.\n   * @param {*} props Предыдущие свойства.\n   // * @param {*} state Предыдущее состояние.\n   * @return {undefined}\n   */\n  componentDidUpdate(props) {\n    this.layerDelete(props);\n    this.layerAdd(this.props);\n  }\n\n  /**\n   * Вызывается сразу перед тем, как компонент будет удален из DOM.\n   * @return {undefined}\n   */\n  componentWillUnmount() {\n    this.layerDelete(this.props);\n  }\n\n  /**\n   * Добавить слой.\n   * @return {undefined}\n   */\n  layerAdd(props) {\n    const {geoJSON, leaflet} = props;\n    this.layer = L.GeoJSON.geometryToLayer(geoJSON);\n    leaflet.addLayer(this.layer);\n  }\n\n  /**\n   * Удалить слой.\n   * @return {undefined}\n   */\n  layerDelete(props) {\n    const {leaflet} = props;\n\n    if (leaflet) {\n      leaflet.removeLayer(this.layer);\n    }\n  }\n\n  /**\n   * Отображение компонента\n   * @return {*} Представление компонента.\n   */\n  render() {\n    return null;\n  }\n}\n\nexport default withMap(GeoJSON);\n","import L from 'leaflet';\nimport {MapContext} from 'modules/map/context/index.js';\nimport React from 'react';\nimport './style.css';\n\n// Фикс иконок на картах\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nclass Map extends React.PureComponent {\n  state = {\n    isLoad: false,\n    leaflet: undefined,\n  };\n\n  /**\n   * Конструктор компонента.\n   * @param {*} props Свойства переданые в компонент.\n   * @return {undefined}\n   */\n  constructor(props) {\n    super(props);\n    window.addEventListener('load', this.handleLoad);\n  }\n\n  handleLoad = () => {\n    this.setState({isLoad: true});\n  };\n\n  /**\n   * Получить ref.\n   * @param {*} map ref.\n   * @return {undefined}\n   */\n  refMap = (map) => {\n    this.map = map;\n  };\n\n  /**\n   * Вывести компонент.\n   * @return {*} Представление.\n   */\n  render() {\n    return (\n      <div className=\"map\" ref={this.refMap}>\n        <MapContext.Provider value={this.state}>\n          {this.state.leaflet && this.props.children}\n        </MapContext.Provider>\n      </div>\n    );\n  }\n\n  /**\n   * Компонент примонтировался.\n   * В данный момент у нас есть возможность использовать refs,\n   * а следовательно это то самое место, где мы хотели бы указать установку фокуса.\n   * Так же, таймауты, ajax-запросы и взаимодействие с другими библиотеками стоит обрабатывать здесь.\n   * @return {undefined}\n   */\n  componentDidMount() {\n    const leaflet = L.map(this.map);\n    this.setState({leaflet});\n  }\n\n  /**\n   * Вызывается сразу перед тем, как компонент будет удален из DOM.\n   * @return {undefined}\n   */\n  componentWillUnmount() {\n    this.state.leaflet.remove();\n    this.setState({leaflet: undefined});\n    window.removeEventListener('load', this.handleLoad);\n  }\n}\n\nexport default Map;\n","import L from 'leaflet';\nimport withMap from 'modules/map/hoc/withMap/index.jsx';\nimport React from 'react';\n\nclass TileLayer extends React.PureComponent {\n  /**\n   * Отображение компонента\n   * @return {*} Представление компонента.\n   */\n  render() {\n    return null;\n  }\n\n  /**\n   * Компонент примонтировался.\n   * В данный момент у нас есть возможность использовать refs,\n   * а следовательно это то самое место, где мы хотели бы указать установку фокуса.\n   * Так же, таймауты, ajax-запросы и взаимодействие с другими библиотеками стоит обрабатывать здесь.\n   * @return {undefined}\n   */\n  componentDidMount() {\n    this.layerAdd(this.props);\n  }\n\n  /**\n   * Вызывается сразу после render.\n   * Не вызывается в момент первого render'а компонента.\n   * @param {*} props Предыдущие свойства.\n   // * @param {*} state Предыдущее состояние.\n   * @return {undefined}\n   */\n  componentDidUpdate(props) {\n    this.layerDelete(props);\n    this.layerAdd(this.props);\n  }\n\n  /**\n   * Вызывается сразу перед тем, как компонент будет удален из DOM.\n   * @return {undefined}\n   */\n  componentWillUnmount() {\n    this.layerDelete(this.props);\n  }\n\n  /**\n   * Добавить слой.\n   * @return {undefined}\n   */\n  layerAdd(props) {\n    const {leaflet, params, url} = props;\n\n    if (leaflet) {\n      this.layer = new L.TileLayer(url, params);\n      leaflet.addLayer(this.layer);\n    }\n  }\n\n  /**\n   * Удалить слой.\n   * @return {undefined}\n   */\n  layerDelete(props) {\n    const {leaflet} = props;\n\n    if (leaflet) {\n      leaflet.removeLayer(this.layer);\n    }\n  }\n}\n\nexport default withMap(TileLayer);\n","import L from 'leaflet';\nimport withMap from \"modules/map/hoc/withMap/index.jsx\";\nimport React from 'react';\n\nclass View extends React.Component {\n  bounds;\n\n  /**\n   * Конструктор компонента.\n   * @param {*} props Свойства переданые в компонент.\n   * @return {undefined}\n   */\n  constructor(props) {\n    super(props);\n    const {leaflet} = props;\n    this.fly();\n\n    leaflet.on('moveend zoomend', this.handleViewChange);\n  }\n\n  /**\n   * Получить \"очищеные\" координаты границ.\n   * @param {*} bounds Границы.\n   * @return {*} Границы.\n   */\n  static getBoundsClean(bounds) {\n    const nextBounds = View.getBoundsNext(bounds);\n\n    if (nextBounds.equals(bounds)) {\n      return bounds;\n    }\n\n    return View.getBoundsClean(nextBounds);\n  }\n\n  /**\n   * Сделать цикл: bounds->layer->geoJSON->bounds для \"очистки\" координат границ.\n   * @param {*} bounds Границы.\n   * @return {undefined}\n   */\n  static getBoundsNext(bounds) {\n    const rectangle = L.rectangle(bounds);\n    const view = rectangle.toGeoJSON();\n\n    return View.getBounds(view);\n  }\n\n  static getBounds(view) {\n    return L.geoJSON(view).getBounds();\n  }\n\n  /**\n   * Перейти к виду\n   * @return {undefined}\n   */\n  fly() {\n    const {leaflet, view} = this.props;\n    const layer = L.geoJSON(view);\n    const bounds = layer.getBounds();\n    if (bounds.isValid()) {\n      leaflet.fitBounds(bounds);\n    } else {\n      leaflet.fitWorld({padding: [0, 0]});\n    }\n  }\n\n  /**\n   * Обработать смену положения карты\n   * @return {undefined}\n   */\n  handleViewChange = () => {\n    const {leaflet, onViewChange} = this.props;\n\n    if (onViewChange) {\n      const bounds = View.getBoundsClean(leaflet.getBounds());\n      const rectangle = L.rectangle(bounds);\n      const view = rectangle.toGeoJSON();\n      onViewChange(view);\n    }\n  };\n\n  /**\n   * Отображение компонента\n   * @return {*} Представление компонента.\n   */\n  render() {\n    return null;\n  }\n\n  /**\n   * Вызывается сразу после render.\n   * Не вызывается в момент первого render'а компонента.\n   * @param {*} props - Предыдущие свойства.\n   // * @param {*} state - Предыдущее состояние.\n   * @return {undefined}\n   */\n  componentDidUpdate(props) {\n    const {isLoad, view} = this.props;\n    if (!props.isLoad && isLoad) {\n      this.props.leaflet.invalidateSize();\n      this.fly();\n    }\n\n    if (view !== props.view) {\n      const bounds = View.getBounds(view);\n      if (bounds.isValid() && !bounds.equals(this.bounds)) {\n        this.bounds = bounds;\n        this.fly();\n      }\n    }\n  }\n\n  /**\n   * Вызывается сразу перед тем, как компонент будет удален из DOM.\n   * @return {undefined}\n   */\n  componentWillUnmount() {\n    this.props.leaflet.off('moveend zoomend', this.handleViewChange);\n  }\n}\n\nexport default withMap(View);\n","import Layout from 'modules/common/containers/Layout/index.jsx';\nimport GeoJSONItem from \"modules/example-map/components/GeoJSONItem/index.jsx\";\nimport TileLayerItem from 'modules/example-map/components/TileLayerItem/index.jsx';\nimport geoJSONData from 'modules/example-map/data/geo-json.json';\nimport tileLayerData from 'modules/example-map/data/tile-layer.json';\nimport GeoJSON from 'modules/map/containers/GeoJSON/index.jsx';\nimport Map from \"modules/map/containers/Map/index.jsx\";\nimport TileLayer from 'modules/map/containers/TileLayer/index.jsx';\nimport View from 'modules/map/containers/View/index.jsx';\nimport React from 'react';\n\nconst geoJSONIdList = Object.keys(geoJSONData);\nconst tileLayerIdList = Object.keys(tileLayerData);\n\nclass ExampleMap extends React.Component {\n  /**\n   * Значения свойств по-умолчанию.\n   * https://facebook.github.io/react/docs/typechecking-with-proptypes.html\n   */\n  static defaultProps = {};\n\n  state = {\n    showData: {},\n    tileLayerId: tileLayerIdList[0],\n    view: {},\n  };\n\n  /**\n   * Вывести компонент.\n   * @return {*} Представление.\n   */\n  render() {\n    return (\n      <Layout main={this.renderMain()} side={this.renderSide()} />\n    );\n  }\n\n  renderMain() {\n    const geoJSONList = geoJSONIdList.filter(this.filterGeoJSON).map(this.getGeoJSON);\n    return (\n      <Map>\n        <TileLayer {...tileLayerData[this.state.tileLayerId]} />\n        <View onViewChange={this.handleViewChange} view={geoJSONList} />\n        {geoJSONList.map(this.renderGeoJSON)}\n      </Map>\n    );\n  }\n\n  renderSide() {\n    return (\n      <React.Fragment>\n        <fieldset>\n          <legend>Tile layer</legend>\n          {tileLayerIdList.map(this.renderTileLayer)}\n        </fieldset>\n        <fieldset>\n          <legend>View</legend>\n          <textarea cols=\"31\"\n                    disabled\n                    id=\"view\"\n                    name=\"view\"\n                    rows=\"31\"\n                    value={JSON.stringify(this.state.view, undefined, 2)} />\n        </fieldset>\n        <fieldset>\n          <legend>GeoJSON</legend>\n          {geoJSONIdList.map(this.renderGeoJSONItem)}\n        </fieldset>\n      </React.Fragment>\n    );\n  }\n\n  filterGeoJSON = (id) => this.state.showData[id];\n\n  getGeoJSON = (id) => geoJSONData[id];\n\n  handleGeoJSONChange = (id) => {\n    this.setState((state) => ({\n      ...state,\n      showData: {\n        ...state.showData,\n        [id]: !state.showData[id],\n      },\n    }));\n  };\n\n  handleTileLayerChange = (tileLayerId) => {\n    this.setState({tileLayerId});\n  };\n\n  handleViewChange = (view) => {\n    this.setState({view});\n  };\n\n  renderGeoJSON = (geoJSON, id) => <GeoJSON geoJSON={geoJSON} key={id} />;\n\n  renderGeoJSONItem = (id) => <GeoJSONItem key={id} onChange={this.handleGeoJSONChange} id={id} value={this.state.showData} />;\n\n  renderTileLayer = (id) => <TileLayerItem key={id} onChange={this.handleTileLayerChange} id={id} value={this.state.tileLayerId} />;\n}\n\nexport default ExampleMap;\n","import history from 'app/history.js';\nimport configureStore from 'app/store.js';\nimport ExampleKey from 'modules/example-key/containers/ExampleKey/index.jsx';\nimport ExampleMap from 'modules/example-map/containers/ExampleMap/index.jsx';\nimport React from 'react';\nimport {Provider} from 'react-redux';\nimport {Redirect, Route, Switch} from \"react-router\";\nimport {Link, Router} from 'react-router-dom';\nimport './style.css';\n\nconst store = configureStore();\n\nconst routeData = {\n  'example-key': {\n    component: ExampleKey,\n    name: 'ExampleKey',\n    path: '/example-key',\n  },\n  'example-map': {\n    component: ExampleMap,\n    name: 'ExampleMap',\n    path: '/example-map',\n  },\n};\n\nconst routeList = Object.keys(routeData);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <div className=\"app\">\n            <div className=\"app__nav\">\n                {routeList.map(this.renderLink)}\n            </div>\n            <div className=\"app__content\">\n              <Switch>\n                {routeList.map(this.renderRoute)}\n                <Redirect to={routeData[routeList[0]].path} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n\n  renderLink = (routeId) => <Link className=\"app__nav-link\" key={routeId} to={routeData[routeId].path}>{routeData[routeId].name}</Link>;\n\n  renderRoute = (routeId) => <Route component={routeData[routeId].component} key={routeId} path={routeData[routeId].path} />;\n}\n\nexport default App;\n","import getApi from 'app/api.js';\nimport reducer from 'app/reducer.js';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore() {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhancer = composeEnhancers(applyMiddleware(thunk.withExtraArgument(getApi())));\n  const store = createStore(reducer, enhancer);\n\n  if (module.hot) {\n    module.hot.accept('app/reducer.js', () => {\n      store.replaceReducer(reducer);\n    });\n  }\n\n  return store;\n}\n","import ExampleApi from 'modules/example/api/index.js';\n\n/**\n * Функция для получения Api.\n * @param {string} host Хост сервера.\n * @return {*} Объекты Api\n */\nexport default function getApi(host) {\n  return {\n    example: new ExampleApi(host),\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import App from 'app/index.jsx';\nimport 'index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept('app/index.jsx', () => ReactDOM.render(<App />, document.getElementById('root')));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}