{"version":3,"sources":["app/history.js","modules/common/components/If.jsx","modules/common/components/KeyHandler.jsx","modules/common/components/Layout.jsx","modules/map/context/MapContext.js","modules/map/hoc/withMap.jsx","modules/map/components/GeoJSON.jsx","modules/map/components/Map.jsx","modules/map/components/TileLayer.jsx","modules/map/components/View.jsx","modules/example-map/components/ExampleMapMain.jsx","modules/example-map/components/GeoJSONField.jsx","modules/example-map/components/TileLayerField.jsx","modules/example-map/components/ExampleMapSide.jsx","modules/example-map/components/ExampleMap.jsx","modules/centrifuge/context/SocketContext.js","modules/centrifuge/components/Centrifuge.jsx","modules/centrifuge/components/Subscribe.jsx","modules/centrifuge/hoc/withSocket.jsx","modules/map/components/Marker.jsx","modules/example-socket/components/ExampleSocketMain.jsx","modules/example-socket/components/ExampleSocket.jsx","modules/example-socket/components/SocketGenerator.jsx","app/index.jsx","serviceWorker.js","index.js"],"names":["createHashHistory","If","_ref","children","condition","KeyHandler","handlerAdd","eventName","document","addEventListener","_this","handler","handlerRemove","removeEventListener","e","keyList","props","type","keyCode","Object","keys","this","forEach","React","Component","Layout","react_default","a","createElement","className","side","main","defaultProps","MapContext","createContext","undefined","withMap","_React$Component","ComponentWithMap","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","renderComponent","context","assign","inherits","createClass","key","value","Consumer","layerAdd","layerDelete","_this$props","geoJSON","leaflet","layer","L","GeoJSON","geometryToLayer","addLayer","removeLayer","PureComponent","Map","state","isLoad","handleLoad","setState","map","createRef","ref","Provider","current","window","remove","params","url","TileLayer","handleViewChange","onViewChange","bounds","getBounds","rectangle","toGeoJSON","setView","on","_this$props2","view","View","isValid","fitBounds","fitWorld","padding","_this$props3","invalidateSize","equals","off","ExampleMapMain","renderGeoJSON","id","components_GeoJSON","geoJSONList","tileLayer","map_components_Map","components_TileLayer","components_View","GeoJSONField","handleChange","onChange","htmlFor","name","defaultChecked","TileLayerField","checked","ExampleMapSide","renderGeoJSONField","example_map_components_GeoJSONField","onGeoJSONChange","showData","renderTileLayerField","example_map_components_TileLayerField","onTileLayerChange","tileLayerId","geoJSONIdList","tileLayerIdList","Fragment","JSON","stringify","geometry","geoJSONData","tileLayerData","ExampleMap","filterGeoJSON","getGeoJSON","handleGeoJSONChange","objectSpread","defineProperty","handleTileLayerChange","common_components_Layout","renderMain","renderSide","filter","components_ExampleMapMain","components_ExampleMapSide","SocketContext","Centrifuge","centrifuge","CentrifugeJS","connect","disconnect","isDisconnected","configure","connectData","removeAllListeners","secret","user","timestamp","token","getToken","hmacBody","shaObj","JsSHA","setHMACKey","update","getHMAC","Math","round","Date","now","toString","Subscribe","subscription","handleConnect","forceUpdate","handleSubscribe","eventData","subscribe","channel","unsubscribe","isConnected","withSocket","ComponentWithSocket","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","point","layerUpdate","marker","coordsToLatLng","setLatLng","ExampleSocketMain","isFollowPoint","message","data","_this$state","components_Centrifuge","Path","map_components_Marker","components_Subscribe","coordinates","ExampleSocket","components_ExampleSocketMain","Stamen","SocketGenerator","position","handlePause","timeout","clearTimeout","handleStart","tickBind","handleStop","process","handleToggleView","toggleView","publish","setPosition","tick","bind","assertThisInitialized","onClick","setTimeout","interval","routeData","example-map","component","path","example-socket","socket-generator","routeList","App","showNav","keydown","78","altKey","toggleNav","renderLink","routeId","Link","to","renderRoute","Route","Router","history","Switch","Redirect","components_KeyHandler","Boolean","location","hostname","match","ReactDOM","render","app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5244ce20.chunk.js","sourcesContent":["import {createHashHistory} from 'history';\n\nexport default createHashHistory();\n","export default function If({children, condition}) {\n  return condition && children;\n}\n","import React from 'react';\n\nclass KeyHandler extends React.Component {\n  handlerAdd = (eventName) => {\n    document.addEventListener(eventName, this.handler);\n  };\n\n  handlerRemove = (eventName) => {\n    document.removeEventListener(eventName, this.handler);\n  };\n\n  handler = (e) => {\n    const {keyList} = this.props;\n    if (keyList[e.type]) {\n      if (keyList[e.type][e.keyCode]) {\n        keyList[e.type][e.keyCode](e);\n      }\n    }\n  };\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    Object.keys(this.props.keyList).forEach(this.handlerAdd);\n  }\n\n  shouldComponentUpdate(props) {\n    Object.keys(this.props.keyList).forEach(this.handlerRemove);\n    Object.keys(props.keyList).forEach(this.handlerAdd);\n    return false;\n  }\n\n  componentWillUnmount() {\n    Object.keys(this.props.keyList).forEach(this.handlerRemove);\n  }\n}\n\nexport default KeyHandler;\n","import 'modules/common/components/Layout.css';\nimport React from 'react';\n\nclass Layout extends React.Component {\n  static defaultProps = {\n    main: () => <div>Main</div>,\n    side: () => <div>Side</div>,\n  };\n\n  render() {\n    return (\n      <div className=\"layout\">\n        <div className=\"layout__side\">{this.props.side}</div>\n        <div className=\"layout__main\">{this.props.main}</div>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\n\nexport const MapContext = React.createContext(undefined);\n","import {MapContext} from 'modules/map/context/MapContext.js';\nimport React from 'react';\n\nexport default function withMap(Component) {\n  return class ComponentWithMap extends React.Component {\n    renderComponent = (context) => <Component {...this.props} {...context} />;\n\n    render() {\n      return <MapContext.Consumer>{this.renderComponent}</MapContext.Consumer>;\n    }\n  };\n}\n","import L from 'leaflet';\nimport withMap from 'modules/map/hoc/withMap.jsx';\nimport React from 'react';\n\nclass GeoJSON extends React.PureComponent {\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    this.layerAdd();\n  }\n\n  componentDidUpdate() {\n    this.layerDelete();\n    this.layerAdd();\n  }\n\n  componentWillUnmount() {\n    this.layerDelete();\n  }\n\n  layerAdd() {\n    const {geoJSON, leaflet} = this.props;\n    this.layer = L.GeoJSON.geometryToLayer(geoJSON);\n    leaflet.addLayer(this.layer);\n  }\n\n  layerDelete() {\n    this.props.leaflet.removeLayer(this.layer);\n  }\n}\n\nexport default withMap(GeoJSON);\n","import L from 'leaflet';\nimport 'modules/map/components/Map.css';\nimport {MapContext} from 'modules/map/context/MapContext.js';\nimport React from 'react';\n\nclass Map extends React.PureComponent {\n  state = {\n    isLoad: false,\n    leaflet: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n    this.map = React.createRef();\n  }\n\n  handleLoad = () => {\n    this.setState({isLoad: true});\n  };\n\n  render() {\n    return (\n      <div className=\"map\" ref={this.map}>\n        <MapContext.Provider value={this.state}>\n          {this.state.leaflet && this.props.children}\n        </MapContext.Provider>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const leaflet = L.map(this.map.current);\n    this.setState({leaflet});\n    window.addEventListener('load', this.handleLoad);\n  }\n\n  componentWillUnmount() {\n    this.state.leaflet.remove();\n    window.removeEventListener('load', this.handleLoad);\n  }\n}\n\nexport default Map;\n","import L from 'leaflet';\nimport withMap from 'modules/map/hoc/withMap.jsx';\nimport React from 'react';\n\nclass TileLayer extends React.PureComponent {\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    this.layerAdd();\n  }\n\n  componentDidUpdate() {\n    this.layerDelete();\n    this.layerAdd();\n  }\n\n  componentWillUnmount() {\n    this.layerDelete();\n  }\n\n  layerAdd() {\n    const {leaflet, params, url} = this.props;\n    this.layer = new L.TileLayer(url, params);\n    leaflet.addLayer(this.layer);\n  }\n\n  layerDelete() {\n    this.props.leaflet.removeLayer(this.layer);\n  }\n}\n\nexport default withMap(TileLayer);\n","import L from 'leaflet';\nimport withMap from 'modules/map/hoc/withMap.jsx';\nimport React from 'react';\n\nclass View extends React.Component {\n  bounds;\n\n  static getBounds(view) {\n    return L.geoJSON(view).getBounds();\n  }\n\n  handleViewChange = () => {\n    const {leaflet, onViewChange} = this.props;\n\n    if (onViewChange) {\n      const bounds = leaflet.getBounds();\n      const rectangle = L.rectangle(bounds);\n      const view = rectangle.toGeoJSON();\n      onViewChange(view);\n    }\n  };\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    this.setView();\n    this.props.leaflet.on('moveend zoomend', this.handleViewChange);\n  }\n\n  setView() {\n    const {leaflet, view} = this.props;\n    const bounds = View.getBounds(view);\n    if (bounds.isValid()) {\n      leaflet.fitBounds(bounds);\n    } else {\n      leaflet.fitWorld({padding: [0, 0]});\n    }\n    this.handleViewChange()\n  }\n\n  componentDidUpdate(props) {\n    const {isLoad, view} = this.props;\n\n    if (!props.isLoad && isLoad) {\n      this.props.leaflet.invalidateSize();\n      this.setView();\n    }\n\n    if (view !== props.view) {\n      const bounds = View.getBounds(view);\n      if (bounds.isValid() && !bounds.equals(this.bounds)) {\n        this.bounds = bounds;\n        this.setView();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.leaflet.off('moveend zoomend', this.handleViewChange);\n  }\n}\n\nexport default withMap(View);\n","import GeoJSON from 'modules/map/components/GeoJSON.jsx';\nimport Map from 'modules/map/components/Map.jsx';\nimport TileLayer from 'modules/map/components/TileLayer.jsx';\nimport View from 'modules/map/components/View.jsx';\nimport React from 'react';\n\nclass ExampleMapMain extends React.Component {\n  render() {\n    const {geoJSONList, onViewChange, tileLayer} = this.props;\n    return (\n      <Map>\n        <TileLayer params={tileLayer.params} url={tileLayer.url} />\n        <View onViewChange={onViewChange} view={geoJSONList} />\n        {geoJSONList.map(this.renderGeoJSON)}\n      </Map>\n    );\n  }\n\n  renderGeoJSON = (geoJSON, id) => <GeoJSON geoJSON={geoJSON} key={id} />;\n}\n\nexport default ExampleMapMain;\n","import 'modules/example-map/components/GeoJSONField.css';\nimport React from 'react';\n\nclass GeoJSONField extends React.Component {\n  static defaultProps = {\n    onChange: () => {\n    },\n    value: {},\n  };\n\n  render() {\n    const {id, value} = this.props;\n    return (\n      <label className=\"geo-json\" htmlFor={id}>\n        <input\n          id={id}\n          name=\"tile\"\n          onChange={this.handleChange}\n          defaultChecked={value[id]}\n          type=\"checkbox\"\n        />\n        {id}\n      </label>\n    );\n  }\n\n  handleChange = () => {\n    this.props.onChange(this.props.id);\n  };\n}\n\nexport default GeoJSONField;\n","import 'modules/example-map/components/TileLayerField.css';\nimport React from 'react';\n\nclass TileLayerField extends React.Component {\n  static defaultProps = {\n    onChange: () => {\n    },\n  };\n\n  render() {\n    const {id, value} = this.props;\n    return (\n      <label className=\"tile-radio\" htmlFor={id}>\n        <input\n          id={id}\n          name=\"tile\"\n          onChange={this.handleChange}\n          checked={value === id}\n          type=\"radio\"\n        />\n        {id}\n      </label>\n    );\n  }\n\n  handleChange = () => {\n    this.props.onChange(this.props.id);\n  };\n}\n\nexport default TileLayerField;\n","import GeoJSONField from 'modules/example-map/components/GeoJSONField.jsx';\nimport TileLayerField from 'modules/example-map/components/TileLayerField.jsx';\nimport React from 'react';\n\nclass ExampleMapSide extends React.Component {\n  render() {\n    const {geoJSONIdList, tileLayerIdList, view} = this.props;\n    return (\n      <React.Fragment>\n        <fieldset>\n          <legend>Tile layer</legend>\n          {tileLayerIdList.map(this.renderTileLayerField)}\n        </fieldset>\n        <fieldset>\n          <legend>View</legend>\n          <code>\n            {JSON.stringify(view.geometry, undefined, 1)}\n          </code>\n        </fieldset>\n        <fieldset>\n          <legend>GeoJSON</legend>\n          {geoJSONIdList.map(this.renderGeoJSONField)}\n        </fieldset>\n      </React.Fragment>\n    );\n  }\n\n  renderGeoJSONField = (id) => (\n    <GeoJSONField\n      key={id}\n      onChange={this.props.onGeoJSONChange}\n      id={id}\n      value={this.props.showData}\n    />\n  );\n\n  renderTileLayerField = (id) => (\n    <TileLayerField\n      key={id}\n      onChange={this.props.onTileLayerChange}\n      id={id}\n      value={this.props.tileLayerId}\n    />\n  );\n}\n\nexport default ExampleMapSide;\n","import Layout from 'modules/common/components/Layout.jsx';\nimport ExampleMapMain from 'modules/example-map/components/ExampleMapMain.jsx';\nimport ExampleMapSide from 'modules/example-map/components/ExampleMapSide.jsx';\nimport geoJSONData from 'modules/example-map/data/geo-json.json';\nimport tileLayerData from 'modules/example-map/data/tile-layer.json';\nimport React from 'react';\n\nconst geoJSONIdList = Object.keys(geoJSONData);\nconst tileLayerIdList = Object.keys(tileLayerData);\n\nclass ExampleMap extends React.Component {\n  state = {\n    showData: {},\n    tileLayerId: tileLayerIdList[0],\n    view: {},\n  };\n\n  render() {\n    return (\n      <Layout main={this.renderMain()} side={this.renderSide()} />\n    );\n  }\n\n  renderMain() {\n    const geoJSONList = geoJSONIdList\n    .filter(this.filterGeoJSON)\n    .map(this.getGeoJSON);\n    return (\n      <ExampleMapMain\n        geoJSONList={geoJSONList}\n        onViewChange={this.handleViewChange}\n        tileLayer={tileLayerData[this.state.tileLayerId]}\n      />\n    );\n  }\n\n  renderSide() {\n    return (\n      <ExampleMapSide\n        geoJSONIdList={geoJSONIdList}\n        tileLayerIdList={tileLayerIdList}\n        onGeoJSONChange={this.handleGeoJSONChange}\n        onTileLayerChange={this.handleTileLayerChange}\n        showData={this.state.showData}\n        tileLayerId={this.state.tileLayerId}\n        view={this.state.view}\n      />\n    );\n  }\n\n  filterGeoJSON = (id) => this.state.showData[id];\n\n  getGeoJSON = (id) => geoJSONData[id];\n\n  handleGeoJSONChange = (id) => {\n    this.setState((state) => ({\n      ...state,\n      showData: {\n        ...state.showData,\n        [id]: !state.showData[id],\n      },\n    }));\n  };\n\n  handleTileLayerChange = (tileLayerId) => {\n    this.setState({tileLayerId});\n  };\n\n  handleViewChange = (view) => {\n    this.setState({view});\n  };\n}\n\nexport default ExampleMap;\n","import React from 'react';\n\nexport const SocketContext = React.createContext(undefined);\n","import CentrifugeJS from 'centrifuge';\nimport JsSHA from 'jssha';\nimport {SocketContext} from 'modules/centrifuge/context/SocketContext.js';\nimport React from 'react';\n\nclass Centrifuge extends React.Component {\n  state = {\n    centrifuge: new CentrifugeJS(),\n  };\n\n  static get timestamp() {\n    return Math.round(Date.now() / 1000).toString();\n  }\n\n  get connectData() {\n    const {secret, url, user} = this.props;\n    const timestamp = Centrifuge.timestamp;\n    const token = Centrifuge.getToken(user, secret, timestamp);\n\n    return {\n      timestamp,\n      token,\n      url,\n      user,\n    };\n  }\n\n  static getToken(user, secret, timestamp) {\n    const hmacBody = `${user}${timestamp}`;\n    const shaObj = new JsSHA('SHA-256', 'TEXT');\n    shaObj.setHMACKey(secret, 'TEXT');\n    shaObj.update(hmacBody);\n    return shaObj.getHMAC('HEX');\n  }\n\n  render() {\n    return (\n      <SocketContext.Provider value={this.state}>\n        {this.props.children}\n      </SocketContext.Provider>\n    );\n  }\n\n  componentDidMount() {\n    this.connect();\n  }\n\n  componentWillUnmount() {\n    this.disconnect();\n  }\n\n  connect() {\n    const {centrifuge} = this.state;\n    if (centrifuge.isDisconnected()) {\n      centrifuge.configure(this.connectData);\n      centrifuge.connect();\n    }\n  }\n\n  disconnect() {\n    const {centrifuge} = this.state;\n    centrifuge.removeAllListeners();\n    centrifuge.disconnect();\n  }\n}\n\nexport default Centrifuge;\n","import withSocket from 'modules/centrifuge/hoc/withSocket.jsx';\nimport React from 'react';\n\nclass Subscribe extends React.Component {\n  static defaultProps = {\n    eventData: {},\n  };\n\n  subscription = null;\n\n  constructor(props) {\n    super(props);\n    this.eventData = {\n      ...props.eventData,\n      subscribe: this.handleSubscribe,\n    };\n  }\n\n  handleConnect = () => {\n    this.forceUpdate();\n  };\n\n  handleSubscribe = () => {\n    if (this.subscription) {\n      const {eventData} = this.props;\n      if (eventData.subscribe) {\n        eventData.subscribe(this.subscription);\n      }\n    }\n  };\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.centrifuge.on('connect', this.handleConnect);\n    this.subscribe();\n  }\n\n  shouldComponentUpdate(props) {\n    return !this.subscription || props.channel !== this.props.channel;\n  }\n\n  componentDidUpdate() {\n    this.unsubscribe();\n    this.subscribe();\n  }\n\n  componentWillUnmount() {\n    this.props.centrifuge.off('connect', this.handleConnect);\n    this.unsubscribe();\n  }\n\n  subscribe() {\n    const {centrifuge, channel} = this.props;\n    if (centrifuge.isConnected() && !this.subscription) {\n      this.subscription = centrifuge.subscribe(channel, this.eventData);\n    }\n  }\n\n  unsubscribe() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription.removeAllListeners();\n      this.subscription = null;\n    }\n  }\n}\n\nexport default withSocket(Subscribe);\n","import {SocketContext} from 'modules/centrifuge/context/SocketContext.js';\nimport React from 'react';\n\nexport default function withSocket(Component) {\n  return class ComponentWithSocket extends React.Component {\n    renderComponent = (context) => <Component {...this.props} {...context} />;\n\n    render() {\n      return <SocketContext.Consumer>{this.renderComponent}</SocketContext.Consumer>;\n    }\n  };\n}\n","import L from 'leaflet';\nimport 'modules/map/components/Marker.css';\nimport withMap from 'modules/map/hoc/withMap.jsx';\nimport React from 'react';\n\n// Фикс иконок на картах\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  className: 'marker',\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nclass Marker extends React.PureComponent {\n  componentDidMount() {\n    this.layerAdd(this.props.point);\n  }\n\n  componentDidUpdate() {\n    this.layerUpdate(this.props.point);\n  }\n\n  componentWillUnmount() {\n    this.layerDelete();\n  }\n\n  layerAdd(point) {\n    if (point) {\n      this.layer = L.marker(L.GeoJSON.coordsToLatLng(point));\n      this.props.leaflet.addLayer(this.layer);\n    }\n  }\n\n  layerUpdate(point) {\n    if (point) {\n      if (this.layer) {\n        this.layer.setLatLng(L.GeoJSON.coordsToLatLng(point));\n      } else {\n        this.layerAdd(point);\n      }\n    }\n  }\n\n  layerDelete() {\n    if (this.layer) {\n      this.props.leaflet.removeLayer(this.layer);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withMap(Marker);\n","import Centrifuge from 'modules/centrifuge/components/Centrifuge.jsx';\nimport Subscribe from 'modules/centrifuge/components/Subscribe.jsx';\nimport Map from 'modules/map/components/Map.jsx';\nimport Marker from 'modules/map/components/Marker.jsx';\nimport TileLayer from 'modules/map/components/TileLayer.jsx';\nimport View from 'modules/map/components/View.jsx';\nimport React from 'react';\n\nclass ExampleSocketMain extends React.Component {\n  state = {\n    isFollowPoint: false,\n  };\n\n  get geoJSON() {\n    const {point} = this.state\n    if (point) {\n      return {\n        coordinates: point,\n        type: 'Point',\n      };\n    }\n    return undefined;\n  }\n\n  eventData = {\n    message: (message) => {\n      switch (message.data.type) {\n        case 'setPoint':\n          this.setState({point: message.data.point});\n          break;\n        case 'setView':\n          this.setState((state) => ({\n            ...state,\n            isFollowPoint: !state.isFollowPoint,\n          }));\n          break;\n        default:\n          break;\n      }\n    },\n  };\n\n  render() {\n    const {connectData, geoJSONData, tileLayer} = this.props;\n    const {isFollowPoint, point} = this.state;\n    return (\n      <Centrifuge\n        secret={connectData.secret}\n        url={connectData.url}\n        user={connectData.user}\n      >\n        <Map>\n          <TileLayer params={tileLayer.params} url={tileLayer.url} />\n          <View view={isFollowPoint ? this.geoJSON : geoJSONData.Path} />\n          <Marker point={point} />\n        </Map>\n        <Subscribe channel=\"userstory-at-devpro\" eventData={this.eventData} />\n      </Centrifuge>\n    );\n  }\n}\n\nexport default ExampleSocketMain;\n","import geoJSONData from 'modules/example-map/data/geo-json.json';\nimport tileLayerData from 'modules/example-map/data/tile-layer.json';\nimport ExampleSocketMain\n  from 'modules/example-socket/components/ExampleSocketMain.jsx';\nimport connectData from 'modules/example-socket/data/connect.json';\nimport React from 'react';\n\nclass ExampleSocket extends React.Component {\n  render() {\n    return (\n      <ExampleSocketMain\n        connectData={connectData}\n        geoJSONData={geoJSONData}\n        tileLayer={tileLayerData.Stamen}\n      />\n    );\n  }\n}\n\nexport default ExampleSocket;\n","import Centrifuge from 'modules/centrifuge/components/Centrifuge.jsx';\nimport Subscribe from 'modules/centrifuge/components/Subscribe.jsx';\nimport geoJSONData from 'modules/example-map/data/geo-json.json';\nimport connectData from 'modules/example-socket/data/connect.json';\nimport React from 'react';\n\nclass SocketGenerator extends React.Component {\n  static defaultProps = {\n    interval: 550,\n    user: 'user',\n  };\n\n  state = {\n    position: 0,\n    isFollowPoint: false,\n  };\n\n  subscription;\n\n  constructor(props) {\n    super(props);\n    this.coordinates = geoJSONData.Path.coordinates;\n    this.eventData = {\n      subscribe: this.handleSubscribe,\n    };\n    this.length = this.coordinates.length;\n    this.position = 0;\n    this.tickBind = this.tick.bind(this);\n  }\n\n  handlePause = () => {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = undefined;\n    }\n  };\n\n  handleStart = () => {\n    this.tickBind();\n  };\n\n  handleStop = () => {\n    this.handlePause();\n    this.setState({position: 0});\n    this.process(0);\n  };\n\n  handleSubscribe = (subscription) => {\n    this.subscription = subscription;\n  };\n\n  handleToggleView = () => {\n    this.setState(this.toggleView);\n  };\n\n  toggleView = (state) => {\n    const isFollowPoint = !state.isFollowPoint;\n    if (this.subscription) {\n      this.subscription.publish({\n        type: 'setView',\n        isFollowPoint,\n      });\n    }\n    return {\n      ...state,\n      isFollowPoint,\n    }\n  };\n\n  setPosition = (state) => ({\n    ...state,\n    position: state.position + 1,\n  });\n\n  render() {\n    return (\n      <div>\n        <fieldset>\n          <legend>Control</legend>\n          <button onClick={this.handleStart}>Start</button>\n          {' '}\n          <button onClick={this.handlePause}>Pause</button>\n          {' '}\n          <button onClick={this.handleStop}>Stop</button>\n          {' '}\n          <button onClick={this.handleToggleView}>Toggle View</button>\n        </fieldset>\n        <fieldset>\n          <legend>Current</legend>\n          <code>{JSON.stringify(this.coordinates[this.state.position])}</code>\n        </fieldset>\n        <Centrifuge\n          secret={connectData.secret}\n          url={connectData.url}\n          user={this.props.user}\n        >\n          <Subscribe channel=\"userstory-at-devpro\" eventData={this.eventData} />\n        </Centrifuge>\n      </div>\n    );\n  }\n\n  tick() {\n    if (this.state.position < this.length) {\n      this.timeout = setTimeout(this.tickBind, this.props.interval);\n      this.process(this.state.position);\n      this.setState(this.setPosition);\n    }\n  }\n\n  process(position) {\n    if (this.subscription) {\n      const point = this.coordinates[position];\n      this.subscription.publish({\n        type: 'setPoint',\n        point,\n      });\n    }\n  }\n}\n\nexport default SocketGenerator;\n","import history from 'app/history.js';\nimport If from 'modules/common/components/If.jsx';\nimport KeyHandler from 'modules/common/components/KeyHandler.jsx';\nimport ExampleMap from 'modules/example-map/components/ExampleMap.jsx';\nimport ExampleSocket from 'modules/example-socket/components/ExampleSocket.jsx';\nimport SocketGenerator\n  from 'modules/example-socket/components/SocketGenerator.jsx';\nimport React from 'react';\nimport {Redirect, Route, Switch} from 'react-router';\nimport {Link, Router} from 'react-router-dom';\nimport './style.css';\n\nconst routeData = {\n  'example-map': {\n    component: ExampleMap,\n    name: 'ExampleMap',\n    path: '/example-map',\n  },\n  'example-socket': {\n    component: ExampleSocket,\n    name: 'ExampleSocket',\n    path: '/example-socket',\n  },\n  'socket-generator': {\n    component: SocketGenerator,\n    name: 'SocketGenerator',\n    path: '/socket-generator',\n  },\n};\n\nconst routeList = Object.keys(routeData);\n\nclass App extends React.Component {\n  state = {\n    showNav: false,\n  };\n\n  keyList = {\n    keydown: {\n      78: (e) => {\n        if (e.altKey) {\n          this.setState(this.toggleNav);\n        }\n      },\n    },\n  };\n\n  toggleNav = (state) => ({\n    ...state,\n    showNav: !state.showNav,\n  });\n\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"app\">\n          <If condition={this.state.showNav}>\n            <div className=\"app__nav\">\n              {routeList.map(this.renderLink)}\n            </div>\n          </If>\n          <div className=\"app__content\">\n            <Switch>\n              {routeList.map(this.renderRoute)}\n              <Redirect to={routeData[routeList[0]].path} />\n            </Switch>\n          </div>\n          <KeyHandler keyList={this.keyList} />\n        </div>\n      </Router>\n    );\n  }\n\n  renderLink = (routeId) => <Link\n    className=\"app__nav-link\"\n    key={routeId}\n    to={routeData[routeId].path}\n  >{routeData[routeId].name}</Link>;\n\n  renderRoute = (routeId) => <Route\n    component={routeData[routeId].component}\n    key={routeId}\n    path={routeData[routeId].path}\n  />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n  .register(swUrl)\n  .then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log('New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.');\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  })\n  .catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n  .then(response => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n  .catch(() => {\n    console.log('No internet connection found. App is running in offline mode.');\n  });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import App from 'app/index.jsx';\nimport 'index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept('app/index.jsx', () => ReactDOM.render(\n    <App />, document.getElementById('root')));\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}